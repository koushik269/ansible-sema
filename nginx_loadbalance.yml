---
- name: Install and configure NGINX web servers
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    web_page_path: /var/www/html/index.html

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install NGINX
      apt:
        name: nginx
        state: present

    - name: Deploy custom web page
      copy:
        dest: "{{ web_page_path }}"
        content: |
          <!DOCTYPE html>
          <html>
          <head>
            <title>Welcome to {{ ansible_hostname }}</title>
          </head>
          <body>
            <h1>Hello from {{ ansible_hostname }}</h1>
            <p>Deployed automatically via Ansible & Semaphore.</p>
          </body>
          </html>
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Start and enable NGINX
      service:
        name: nginx
        state: started
        enabled: yes

- name: Configure NGINX load balancer on first server
  hosts: 10.69.69.70
  become: yes
  vars:
    backend_servers:
      - 10.69.69.70
      - 10.69.69.71

  tasks:
    - name: Create load balancer configuration
      copy:
        dest: /etc/nginx/sites-available/loadbalancer.conf
        content: |
          upstream backend {
          {% for srv in backend_servers %}
              server {{ srv }};
          {% endfor %}
          }

          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://backend;
              }
          }

    - name: Enable load balancer site
      file:
        src: /etc/nginx/sites-available/loadbalancer.conf
        dest: /etc/nginx/sites-enabled/loadbalancer.conf
        state: link
        force: yes

    - name: Disable default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      ignore_errors: yes

    - name: Test NGINX configuration
      command: nginx -t
      register: nginx_test
      changed_when: false

    - name: Show config test result
      debug:
        var: nginx_test.stdout_lines

    - name: Restart NGINX
      service:
        name: nginx
        state: restarted
